library(dplyr)
library(survey)
library(data.table)
setwd("D:/Pasantía")
Datos <- fread("Datos_combinados_migracion_2023_ESTE1.csv")
fex <- fread("TOTAL_23.csv")
fex_agrupado <- fex %>%
  group_by(DIRECTORIO, SECUENCIA_P, MES) %>%
  summarise(FEX_DPTO = mean(FEX_DPTO, na.rm = TRUE))
head(fex_agrupado)
data_com <- left_join(Datos, fex_agrupado %>% select(DIRECTORIO, SECUENCIA_P, MES, FEX_DPTO), 
                      by = c("DIRECTORIO", "SECUENCIA_P", "MES"),
                      relationship = "many-to-many")
data_com <- data_com %>%
  mutate(FEX_C18_div = FEX_C18 / 12)

data_com <- data_com %>%
  mutate(PESO_FINAL = ifelse(is.na(FEX_DPTO), FEX_C18_div, FEX_DPTO))
#
#write.csv(data_com, "Datos_combinados_migracion_2023_ESTE2.csv")
#Estimaciones
Datos <- fread("Datos_combinados_migracion_2023_ESTE2.csv")
sum(is.na(Datos$P3373S3))

paises <- unique(Datos$P3373S3)
paises <- paises[-1]

# Crear una variable indicadora de migrante
Datos$es_migrante <- ifelse(Datos$P3373S3 %in% paises, 1, 0)

# Crear el diseño de la encuesta
diseño <- svydesign(
  id = ~SEGMENTO,
  strata = ~MPIO,
  weights = ~PESO_FINAL,
  data = Datos
)

options(survey.bootstrap.size = 500)
diseño_boot <- as.svrepdesign(diseño, type = "bootstrap")
P_bootstrap_<- function(diseño_boot, grupo) {
  # Usamos svyby con svymean para obtener las proporciones en cada réplica bootstrap
  boot_resultados <- svyby(
    ~es_migrante,
    by = grupo,
    design = diseño_boot,
    svymean,
    keep.var = TRUE
  )
  return(boot_resultados)
}
prop_depto_boot <- P_bootstrap(diseño_boot, ~DPTO)
prop_muni_boot <- P_bootstrap(diseño_boot, ~MPIO)
sum(prop_depto_boot$proporcion)
sum(prop_muni_boot$proporcion) 

fwrite(prop_depto_boot, "proporcion_migrantes_departamento.csv", row.names = FALSE)
fwrite(prop_muni_boot, "proporcion_migrantes_municipio.csv", row.names = FALSE)

total_est <- sum(Datos$PESO_FINAL) 
